//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: kernel/protocol/client/model/v1/message/tracker.proto

package kernel.protocol.client.model.v1;

@kotlin.jvm.JvmName("-initializetrackerObtainSwarmUsersResponse")
public inline fun trackerObtainSwarmUsersResponse(block: kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.Dsl.() -> kotlin.Unit): kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse =
  kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.Dsl._create(kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.newBuilder()).apply { block() }._build()
public object TrackerObtainSwarmUsersResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse = _builder.build()

    /**
     * <code>string action = 1;</code>
     */
    public var action: kotlin.String
      @JvmName("getAction")
      get() = _builder.getAction()
      @JvmName("setAction")
      set(value) {
        _builder.setAction(value)
      }
    /**
     * <code>string action = 1;</code>
     */
    public fun clearAction() {
      _builder.clearAction()
    }

    /**
     * <code>.kernel.protocol.client.model.v1.ResponseHeader header = 2;</code>
     */
    public var header: kernel.protocol.client.model.v1.Base.ResponseHeader
      @JvmName("getHeader")
      get() = _builder.getHeader()
      @JvmName("setHeader")
      set(value) {
        _builder.setHeader(value)
      }
    /**
     * <code>.kernel.protocol.client.model.v1.ResponseHeader header = 2;</code>
     */
    public fun clearHeader() {
      _builder.clearHeader()
    }
    /**
     * <code>.kernel.protocol.client.model.v1.ResponseHeader header = 2;</code>
     * @return Whether the header field is set.
     */
    public fun hasHeader(): kotlin.Boolean {
      return _builder.hasHeader()
    }

    /**
     * <code>.kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponse.ResponseContent content = 3;</code>
     */
    public var content: kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * <code>.kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponse.ResponseContent content = 3;</code>
     */
    public fun clearContent() {
      _builder.clearContent()
    }
    /**
     * <code>.kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponse.ResponseContent content = 3;</code>
     * @return Whether the content field is set.
     */
    public fun hasContent(): kotlin.Boolean {
      return _builder.hasContent()
    }
  }
  @kotlin.jvm.JvmName("-initializeresponseContent")
  public inline fun responseContent(block: kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.ResponseContentKt.Dsl.() -> kotlin.Unit): kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent =
    kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.ResponseContentKt.Dsl._create(kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent.newBuilder()).apply { block() }._build()
  public object ResponseContentKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class SwarmUsersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       */
       public val swarmUsers: com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getSwarmUsersList()
        )
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       * @param value The swarmUsers to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addSwarmUsers")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>.add(value: com.google.protobuf.ListValue) {
        _builder.addSwarmUsers(value)
      }
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       * @param value The swarmUsers to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignSwarmUsers")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>.plusAssign(value: com.google.protobuf.ListValue) {
        add(value)
      }
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       * @param values The swarmUsers to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllSwarmUsers")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ListValue>) {
        _builder.addAllSwarmUsers(values)
      }
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       * @param values The swarmUsers to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllSwarmUsers")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ListValue>) {
        addAll(values)
      }
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       * @param index The index to set the value at.
       * @param value The swarmUsers to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setSwarmUsers")
      public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>.set(index: kotlin.Int, value: com.google.protobuf.ListValue) {
        _builder.setSwarmUsers(index, value)
      }
      /**
       * <code>repeated .google.protobuf.ListValue swarm_users = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearSwarmUsers")
      public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ListValue, SwarmUsersProxy>.clear() {
        _builder.clearSwarmUsers()
      }

    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.copy(block: kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.Dsl.() -> kotlin.Unit): kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse =
  kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent.copy(block: kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.ResponseContentKt.Dsl.() -> kotlin.Unit): kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent =
  kernel.protocol.client.model.v1.TrackerObtainSwarmUsersResponseKt.ResponseContentKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponseOrBuilder.headerOrNull: kernel.protocol.client.model.v1.Base.ResponseHeader?
  get() = if (hasHeader()) getHeader() else null

public val kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponseOrBuilder.contentOrNull: kernel.protocol.client.model.v1.Tracker.TrackerObtainSwarmUsersResponse.ResponseContent?
  get() = if (hasContent()) getContent() else null

